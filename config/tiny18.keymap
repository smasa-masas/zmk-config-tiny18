#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2100
#define ZMK_POINTING_DEFAULT_SCRL_VAL 30

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv {
    time-to-max-speed-ms = <300>;
    acceleration-exponent = <2>;
};

&msc { time-to-max-speed-ms = <100>; };

/ {
    combos {
        compatible = "zmk,combos";

        u {
            bindings = <&kp Y>;
            key-positions = <3 4>;
            layers = <0>;
        };

        p {
            bindings = <&kp P>;
            key-positions = <4 5>;
            layers = <0>;
        };

        x {
            bindings = <&kp X>;
            key-positions = <0 7>;
            layers = <0>;
        };

        x2 {
            bindings = <&kp X>;
            key-positions = <0 7 6>;
            layers = <0>;
        };

        lang1 {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <11 12>;
            layers = <0>;
        };

        g {
            bindings = <&kp G>;
            key-positions = <8 9>;
            layers = <0>;
        };

        t {
            bindings = <&kp T>;
            key-positions = <1 2>;
            layers = <0>;
        };

        z {
            bindings = <&kp Z>;
            key-positions = <0 1 2>;
            layers = <0>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 2>;
            layers = <0>;
        };

        v {
            bindings = <&kp V>;
            key-positions = <9 2>;
            layers = <0>;
        };

        c {
            bindings = <&kp C>;
            key-positions = <8 1>;
            layers = <0>;
        };

        q2 {
            bindings = <&kp Q>;
            key-positions = <0 1 7>;
            layers = <1>;
        };

        medialayer {
            bindings = <&mo 5>;
            key-positions = <6 13>;
            layers = <0>;
        };

        h {
            bindings = <&kp H>;
            key-positions = <10 11 3>;
            layers = <1>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <7 9 8>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <7 9>;
            layers = <0>;
        };

        b {
            bindings = <&kp B>;
            key-positions = <9 14>;
            layers = <0>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <11 16>;
            layers = <0>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <12 16>;
            layers = <0>;
        };

        eqal {
            bindings = <&kp UNDERSCORE>;
            key-positions = <12 13>;
            layers = <2>;
        };

        n {
            bindings = <&kp N>;
            key-positions = <3 10>;
        };

        m {
            bindings = <&kp M>;
            key-positions = <4 11>;
        };

        lang2 {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <7 8>;
        };

        blue {
            bindings = <&clt 4 DELETE>;
            key-positions = <16 17>;
        };

        mo_layer1 {
            bindings = <&mo 1>;
            key-positions = <14 15>;
        };

        qes {
            bindings = <&kp SLASH>;
            key-positions = <5 12>;
        };

        q {
            bindings = <&kp Q>;
            key-positions = <0 1>;
        };

        h2 {
            bindings = <&kp H>;
            key-positions = <10 11>;
        };
    };

    behaviors {
        cmt: custom_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "CUSTOM_MOD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <120>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <120>;
        };

        clt: custom_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "CUSTOM_LAYER_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <120>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp W  &kp E  &kp R  &cmt RIGHT_ALT U  &cmt RIGHT_CONTROL I  &cmt RIGHT_SHIFT O  &cmt LEFT_SHIFT A  &kp S  &kp D  &kp F  &kp J  &kp K  &kp L  &cmt LS(INT_RO) MINUS  &mt LCTRL SPACE  &mt LEFT_ALT DELETE  &clt 2 BACKSPACE  &kp ENTER
            >;
        };

        number_cursor {
            bindings = <
&cmt KP_MULTIPLY KP_PLUS  &cmt KP_SLASH KP_MINUS  &cmt LEFT_ALT F4  &cmt LS(NUMBER_7) NUMBER_7  &cmt LS(NUMBER_8) NUMBER_8  &cmt LS(NUMBER_9) NUMBER_9  &mo 3  &kp AMPERSAND  &kp LS(NUMBER_2)  &kp N0  &mt LS(NUMBER_4) NUMBER_4  &mt LS(NUMBER_5) NUMBER_5  &mt LS(NUMBER_6) NUMBER_6  &mt LS(NUMBER_3) NUMBER_3  &trans  &trans  &mt LS(NUMBER_1) NUMBER_1  &mt LS(NUMBER_2) NUMBER_2
            >;
        };

        ARROW {
            bindings = <
&cmt LEFT_SHIFT F1  &cmt LEFT_CONTROL F2  &cmt LEFT_ALT F3  &cmt RIGHT_ALT LC(PAGE_UP)  &cmt RIGHT_CONTROL UP_ARROW  &cmt RIGHT_SHIFT LC(PAGE_DOWN)  &kp LEFT_SHIFT  &kp F8  &kp F9  &kp F10  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &cmt RIGHT_GUI END  &trans  &trans  &clt 4 ESCAPE  &kp BACKSPACE
            >;
        };

        mouse {
            bindings = <
&kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &msc SCRL_UP  &mmv MOVE_UP  &mmv MOVE_UP  &trans  &mkp MB4  &mkp MB3  &mkp MB5  &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans  &mkp MB1  &mkp MB2
            >;
        };

        ble {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none  &none  &none  &none  &none  &none  &none  &bt BT_CLR  &none  &none  &trans  &trans
            >;
        };

        media {
            bindings = <
&kp K_PREVIOUS  &kp K_PLAY_PAUSE  &kp K_NEXT  &none  &none  &none  &none  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp K_VOLUME_DOWN  &kp K_MUTE  &kp K_VOLUME_UP  &none  &none  &none  &none  &none
            >;
        };
    };
};
